<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SwAAAABJRU5ErkJggg==
</value>
  </data>
</root>